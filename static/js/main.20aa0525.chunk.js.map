{"version":3,"sources":["components/social-profile/profile.module.css","components/FriendsList/friendList.module.css","components/Statistics/statistical.module.css","components/transaction-history/transactionHistory.module.css","components/FriendsList/FriendList.jsx","components/social-profile/Profile.jsx","components/Statistics/Statistics.jsx","components/transaction-history/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","FriendList","friends","className","styles","friend_list","map","friend","item","isOnline","statusOnline","statusOffline","avatar","src","alt","width","name","id","Profile","username","tag","location","stats","profile","description","label","quantity","followers","views","likes","generateRandomColor","color","i","Math","floor","random","pow","toString","slice","Statistics","title","statistics","stat_list","stat","style","backgroundColor","percentage","TransactionHistory","items","transaction_history","type","amount","currency","App","user","statisticsData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.20aa0525.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__oMoBi\",\"description\":\"profile_description__3wQ9N\",\"avatar\":\"profile_avatar__29ZTu\",\"name\":\"profile_name__3NhSl\",\"tag\":\"profile_tag__qmkVI\",\"location\":\"profile_location__2suSb\",\"stats\":\"profile_stats__326Na\",\"label\":\"profile_label__3eizy\",\"quantity\":\"profile_quantity__HzD-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"friendList_friend_list__3Jjr7\",\"item\":\"friendList_item__3e9Ee\",\"statusOnline\":\"friendList_statusOnline__3x_Ik\",\"statusOffline\":\"friendList_statusOffline__212PD\",\"avatar\":\"friendList_avatar__31svd\",\"name\":\"friendList_name__3-fBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistical_statistics__1frNl\",\"title\":\"statistical_title__3I_oo\",\"stat_list\":\"statistical_stat_list__2Es8P\",\"item\":\"statistical_item__1Jxw1\",\"label\":\"statistical_label__F4A4K\",\"percentage\":\"statistical_percentage__3eR2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"transactionHistory_transaction_history__2BqyS\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './friendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friend_list}>\n    {friends.map(friend => (\n      <li className={styles.item} key={friend.id}>\n        <span\n          className={\n            friend.isOnline ? styles.statusOnline : styles.statusOffline\n          }\n        ></span>\n        <img className={styles.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\n        <p className={styles.name}>{friend.name}</p>\n      </li>\n    ))}\n  </ul>\n);\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './profile.module.css';\n\nconst Profile = ({ username, tag, location, avatar, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={avatar} alt={username} className={styles.avatar} />\n      <p className={styles.username}>{username}</p>\n      <p className={styles.tag}>@{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './statistical.module.css';\n\n\nfunction generateRandomColor() {\n  let color = '#';\n  for (let i = 0; i < 3; i++)\n    color += (\n      '0' + Math.floor((Math.random() * Math.pow(20, 2)) / 2).toString(16)\n    ).slice(-2);\n  return color;\n}\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    <h2 className={styles.title}>{title}</h2>\n\n    <ul className={styles.stat_list}>\n      {stats.map(stat => (\n        <li className={styles.item}  style={{\n            backgroundColor: generateRandomColor(),\n          }} key={stat.id}>\n          <span className={styles.label}>{stat.label}</span>\n          <span className={styles.percentage}>{stat.percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './transactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transaction_history}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(item => (\n        <tr key={item.id}>\n          <td>{item.type}</td>\n          <td>{item.amount}</td>\n          <td>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;","import React from 'react';\nimport FriendList from './components/FriendsList/FriendList.jsx';\nimport friends from './components/FriendsList/friends.json';\nimport Profile from './components/social-profile/Profile.jsx';\nimport user from './components/social-profile/user.json';\nimport Statistics from './components/Statistics/Statistics.jsx';\nimport statisticsData from './components/Statistics/data.json';\nimport TransactionHistory from './components/transaction-history/TransactionHistory.jsx';\nimport transactions from './components/transaction-history/transactions.json';\n\n\nconst App = () => (\n  <>\n    <Profile\n      username={user.username}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statisticsData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </>\n);\n\nexport default App;\n","\n\n   \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}